{"version":3,"sources":["webpack:///./src/components/SearchInput/index.js","webpack:///./src/components/SearchDate/index.js","webpack:///./src/pages/blog.js"],"names":["useState","forSearch","setForSearch","className","name","type","placeholder","active","size","color","onClick","pageQuery","posts","data","allMdx","edges","Container","maxWidth","Header","hasLogo","hasMenu","id","CategoryBadge","category","categories","Grid","container","direction","justify","alignItems","item","xs","zeroMinWidth","filter","post","node","frontmatter","title","length","map","Post","Footer"],"mappings":"6SAKe,aAAO,IAAD,EACiBA,oBAAS,GAApCC,EADU,KACCC,EADD,KAGjB,OACI,mBAAKC,UAAU,UACX,qBACIC,KAAK,SACLC,KAAK,SACLC,YAAY,uBACZC,OAASN,EAAY,OAAS,UAClC,YAAC,IAAD,CACIO,KAAM,GACNC,MAAO,UACPC,QAAU,WAAQR,GAAcD,QCdjC,G,UAAA,WACX,OACI,mBAAKE,UAAU,eACX,qBACIC,KAAK,OACLC,KAAK,OACLC,YAAY,qB,wBCqEfK,G,UAjEE,sBAAe,IACXC,EADU,EAAXC,KACgBC,OAAtBC,MAyBR,OACI,uBACI,YAACC,EAAA,EAAD,CAAWC,SAAS,MAChB,YAACC,EAAA,EAAD,CAAQC,SAAU,EACVC,SAAU,IAClB,mBAAKC,GAAG,gBACJ,mBAAKlB,UAAU,cACX,YAACmB,EAAA,EAAD,CAAeC,SAAWC,IAAW,MAEzC,mBAAKrB,UAAU,QACX,YAAC,EAAD,OAEJ,mBAAKA,UAAU,QACX,YAAC,EAAD,QAGR,mBAAKkB,GAAG,QACJ,YAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UACxD,YAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,cAAY,GAC3B,mBAAK7B,UAAU,SACTS,EACGqB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,MAAMC,OAAS,KACpDC,KAAI,YAAqB,IAAZL,EAAW,EAAjBC,KACJ,OACI,YAACK,EAAA,EAAD,CAAMN,KAAOA,YAS7C,YAACO,EAAA,EAAD,QAMU,e","file":"component---src-pages-blog-js-013c805c94068aa7b2a6.js","sourcesContent":["import React, { useState } from 'react';\nimport { GiMagnifyingGlass } from 'react-icons/gi'\n\nimport './index.css';\n\nexport default () => {\n    const [forSearch, setForSearch] = useState(false);\n\n    return(\n        <div className=\"search\" >\n            <input \n                name=\"search\" \n                type=\"search\" \n                placeholder=\"Digite para procurar\"\n                active={ forSearch ? 'true' : 'false' } />\n            <GiMagnifyingGlass \n                size={27} \n                color={'#F55547'}\n                onClick={ () => { setForSearch(!forSearch)  } } />\n        </div>\n    );\n};","import React from 'react';\n\nimport './index.css';\n\nexport default () => {\n    return(\n        <div className=\"search-date\" >\n            <input \n                name=\"date\" \n                type=\"date\" \n                placeholder=\"Digite a data\" />\n        </div>\n    );\n};","import React from 'react';\nimport { Container, Grid } from '@material-ui/core';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport CategoryBadge from '../components/CategoryBadge';\nimport SerchInput from '../components/SearchInput';\nimport SearchDate from '../components/SearchDate';\nimport Post from '../components/Post';\n\nimport categories from '../data/categories';\n\nimport '../styles/blog.css';\n\nexport default ({ data }) => {\n    const { edges: posts } = data.allMdx;\n\n    const searchInputQuery = graphql`\n        query($searchQuery: String) {\n            allMdx(filter: {\n                body: {\n                    regex: $searchQuery\n                }\n            }) {\n                nodes {\n                    excerpt(pruneLength: 250)\n                    frontmatter {\n                        title\n                        date(formatString: \"DD MMMM, YYYY\")\n                        path\n                      \tcategory\n                      \timage\n                      \timageAuthor\n                      \timageAuthorLink\n                    }\n                }\n            }\n        }\n    `;\n\n    return(\n        <div>\n            <Container maxWidth=\"lg\">\n                <Header hasLogo={ true }\n                        hasMenu={ false } />\n                <div id=\"search-tools\">\n                    <div className=\"categories\">\n                        <CategoryBadge category={ categories[0] } />\n                    </div>\n                    <div className=\"date\">\n                        <SearchDate />\n                    </div>\n                    <div className=\"word\">\n                        <SerchInput />\n                    </div>\n                </div>\n                <div id=\"post\">\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={12} zeroMinWidth>\n                            <div className=\"posts\">\n                                { posts\n                                    .filter(post => post.node.frontmatter.title.length > 0)\n                                    .map(({ node: post }) => {\n                                        return(\n                                            <Post post={ post } />\n                                        );\n                                    })\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n            <Footer />\n        </div>\n    );\n\n}\n\nexport const pageQuery = graphql`\n    query BlogQuery {\n        allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n            edges {\n                node {\n                    excerpt(pruneLength: 250)\n                    frontmatter {\n                        title\n                        date(formatString: \"DD MMMM, YYYY\")\n                        path\n                      \tcategory\n                      \timage\n                      \timageAuthor\n                      \timageAuthorLink\n                    }\n                }\n            }\n        }\n    }\n`"],"sourceRoot":""}